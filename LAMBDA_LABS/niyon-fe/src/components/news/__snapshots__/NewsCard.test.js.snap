// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NewsCard /> component testing should pass snapshot testing 1`] = `
<NewsCard
  data={
    Object {
      "cover_image": null,
      "created_at": "2020-07-15T13:40:32Z",
      "description": "test-description",
      "id": 398838,
      "published_at": "2020-07-15T13:45:09Z",
      "readable_publish_date": "Jul 15",
      "social_image": "test-image",
      "tag_list": Array [
        "typescript",
        "javascript",
        "angular",
      ],
      "title": "test-title",
      "type_of": "test-article",
      "url": "test-news-url",
    }
  }
>
  <WithStyles(ForwardRef(Card))
    className="makeStyles-root-1"
  >
    <ForwardRef(Card)
      className="makeStyles-root-1"
      classes={
        Object {
          "root": "MuiCard-root",
        }
      }
    >
      <WithStyles(ForwardRef(Paper))
        className="MuiCard-root makeStyles-root-1"
        elevation={1}
      >
        <ForwardRef(Paper)
          className="MuiCard-root makeStyles-root-1"
          classes={
            Object {
              "elevation0": "MuiPaper-elevation0",
              "elevation1": "MuiPaper-elevation1",
              "elevation10": "MuiPaper-elevation10",
              "elevation11": "MuiPaper-elevation11",
              "elevation12": "MuiPaper-elevation12",
              "elevation13": "MuiPaper-elevation13",
              "elevation14": "MuiPaper-elevation14",
              "elevation15": "MuiPaper-elevation15",
              "elevation16": "MuiPaper-elevation16",
              "elevation17": "MuiPaper-elevation17",
              "elevation18": "MuiPaper-elevation18",
              "elevation19": "MuiPaper-elevation19",
              "elevation2": "MuiPaper-elevation2",
              "elevation20": "MuiPaper-elevation20",
              "elevation21": "MuiPaper-elevation21",
              "elevation22": "MuiPaper-elevation22",
              "elevation23": "MuiPaper-elevation23",
              "elevation24": "MuiPaper-elevation24",
              "elevation3": "MuiPaper-elevation3",
              "elevation4": "MuiPaper-elevation4",
              "elevation5": "MuiPaper-elevation5",
              "elevation6": "MuiPaper-elevation6",
              "elevation7": "MuiPaper-elevation7",
              "elevation8": "MuiPaper-elevation8",
              "elevation9": "MuiPaper-elevation9",
              "outlined": "MuiPaper-outlined",
              "root": "MuiPaper-root",
              "rounded": "MuiPaper-rounded",
            }
          }
          elevation={1}
        >
          <div
            className="MuiPaper-root MuiCard-root makeStyles-root-1 MuiPaper-elevation1 MuiPaper-rounded"
          >
            <WithStyles(ForwardRef(CardHeader))
              action={
                <ForwardRef(WithStyles)
                  aria-label="settings"
                >
                  <UNDEFINED />
                </ForwardRef(WithStyles)>
              }
              avatar={
                <ForwardRef(WithStyles)
                  aria-label="recipe"
                  className="makeStyles-avatar-5"
                >
                  T
                </ForwardRef(WithStyles)>
              }
              subheader="2020-07-15"
              title="test-title"
            >
              <ForwardRef(CardHeader)
                action={
                  <ForwardRef(WithStyles)
                    aria-label="settings"
                  >
                    <UNDEFINED />
                  </ForwardRef(WithStyles)>
                }
                avatar={
                  <ForwardRef(WithStyles)
                    aria-label="recipe"
                    className="makeStyles-avatar-5"
                  >
                    T
                  </ForwardRef(WithStyles)>
                }
                classes={
                  Object {
                    "action": "MuiCardHeader-action",
                    "avatar": "MuiCardHeader-avatar",
                    "content": "MuiCardHeader-content",
                    "root": "MuiCardHeader-root",
                    "subheader": "MuiCardHeader-subheader",
                    "title": "MuiCardHeader-title",
                  }
                }
                subheader="2020-07-15"
                title="test-title"
              >
                <div
                  className="MuiCardHeader-root"
                >
                  <div
                    className="MuiCardHeader-avatar"
                  >
                    <WithStyles(ForwardRef(Avatar))
                      aria-label="recipe"
                      className="makeStyles-avatar-5"
                    >
                      <ForwardRef(Avatar)
                        aria-label="recipe"
                        className="makeStyles-avatar-5"
                        classes={
                          Object {
                            "circle": "MuiAvatar-circle",
                            "colorDefault": "MuiAvatar-colorDefault",
                            "fallback": "MuiAvatar-fallback",
                            "img": "MuiAvatar-img",
                            "root": "MuiAvatar-root",
                            "rounded": "MuiAvatar-rounded",
                            "square": "MuiAvatar-square",
                          }
                        }
                      >
                        <div
                          aria-label="recipe"
                          className="MuiAvatar-root MuiAvatar-circle makeStyles-avatar-5 MuiAvatar-colorDefault"
                        >
                          T
                        </div>
                      </ForwardRef(Avatar)>
                    </WithStyles(ForwardRef(Avatar))>
                  </div>
                  <div
                    className="MuiCardHeader-content"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="MuiCardHeader-title"
                      component="span"
                      display="block"
                      variant="body2"
                    >
                      <ForwardRef(Typography)
                        className="MuiCardHeader-title"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                        display="block"
                        variant="body2"
                      >
                        <span
                          className="MuiTypography-root MuiCardHeader-title MuiTypography-body2 MuiTypography-displayBlock"
                        >
                          test-title
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiCardHeader-subheader"
                      color="textSecondary"
                      component="span"
                      display="block"
                      variant="body2"
                    >
                      <ForwardRef(Typography)
                        className="MuiCardHeader-subheader"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        color="textSecondary"
                        component="span"
                        display="block"
                        variant="body2"
                      >
                        <span
                          className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body2 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                        >
                          2020-07-15
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                  <div
                    className="MuiCardHeader-action"
                  >
                    <WithStyles(ForwardRef(IconButton))
                      aria-label="settings"
                    >
                      <ForwardRef(IconButton)
                        aria-label="settings"
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-label="settings"
                          centerRipple={true}
                          className="MuiIconButton-root"
                          disabled={false}
                          focusRipple={true}
                        >
                          <ForwardRef(ButtonBase)
                            aria-label="settings"
                            centerRipple={true}
                            className="MuiIconButton-root"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            disabled={false}
                            focusRipple={true}
                          >
                            <button
                              aria-label="settings"
                              className="MuiButtonBase-root MuiIconButton-root"
                              disabled={false}
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <ForwardRef>
                                  <WithStyles(ForwardRef(SvgIcon))>
                                    <ForwardRef(SvgIcon)
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                          "colorError": "MuiSvgIcon-colorError",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                          "root": "MuiSvgIcon-root",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                        />
                                      </svg>
                                    </ForwardRef(SvgIcon)>
                                  </WithStyles(ForwardRef(SvgIcon))>
                                </ForwardRef>
                              </span>
                              <WithStyles(memo)
                                center={true}
                              >
                                <ForwardRef(TouchRipple)
                                  center={true}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                  </div>
                </div>
              </ForwardRef(CardHeader)>
            </WithStyles(ForwardRef(CardHeader))>
            <WithStyles(ForwardRef(CardMedia))
              className="makeStyles-media-2"
              image="test-image"
              title="Paella dish"
            >
              <ForwardRef(CardMedia)
                className="makeStyles-media-2"
                classes={
                  Object {
                    "img": "MuiCardMedia-img",
                    "media": "MuiCardMedia-media",
                    "root": "MuiCardMedia-root",
                  }
                }
                image="test-image"
                title="Paella dish"
              >
                <div
                  className="MuiCardMedia-root makeStyles-media-2"
                  style={
                    Object {
                      "backgroundImage": "url(\\"test-image\\")",
                    }
                  }
                  title="Paella dish"
                />
              </ForwardRef(CardMedia)>
            </WithStyles(ForwardRef(CardMedia))>
            <WithStyles(ForwardRef(CardContent))>
              <ForwardRef(CardContent)
                classes={
                  Object {
                    "root": "MuiCardContent-root",
                  }
                }
              >
                <div
                  className="MuiCardContent-root"
                >
                  <WithStyles(ForwardRef(Typography))
                    color="textSecondary"
                    component="p"
                    variant="body2"
                  >
                    <ForwardRef(Typography)
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      color="textSecondary"
                      component="p"
                      variant="body2"
                    >
                      <p
                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextSecondary"
                      >
                        test-title
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </div>
              </ForwardRef(CardContent)>
            </WithStyles(ForwardRef(CardContent))>
            <WithStyles(ForwardRef(CardActions))
              disableSpacing={true}
            >
              <ForwardRef(CardActions)
                classes={
                  Object {
                    "root": "MuiCardActions-root",
                    "spacing": "MuiCardActions-spacing",
                  }
                }
                disableSpacing={true}
              >
                <div
                  className="MuiCardActions-root"
                >
                  <WithStyles(ForwardRef(IconButton))
                    aria-label="add to favorites"
                  >
                    <ForwardRef(IconButton)
                      aria-label="add to favorites"
                      classes={
                        Object {
                          "colorInherit": "MuiIconButton-colorInherit",
                          "colorPrimary": "MuiIconButton-colorPrimary",
                          "colorSecondary": "MuiIconButton-colorSecondary",
                          "disabled": "Mui-disabled",
                          "edgeEnd": "MuiIconButton-edgeEnd",
                          "edgeStart": "MuiIconButton-edgeStart",
                          "label": "MuiIconButton-label",
                          "root": "MuiIconButton-root",
                          "sizeSmall": "MuiIconButton-sizeSmall",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        aria-label="add to favorites"
                        centerRipple={true}
                        className="MuiIconButton-root"
                        disabled={false}
                        focusRipple={true}
                      >
                        <ForwardRef(ButtonBase)
                          aria-label="add to favorites"
                          centerRipple={true}
                          className="MuiIconButton-root"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          disabled={false}
                          focusRipple={true}
                        >
                          <button
                            aria-label="add to favorites"
                            className="MuiButtonBase-root MuiIconButton-root"
                            disabled={false}
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            <span
                              className="MuiIconButton-label"
                            >
                              <ForwardRef>
                                <WithStyles(ForwardRef(SvgIcon))>
                                  <ForwardRef(SvgIcon)
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef>
                            </span>
                            <WithStyles(memo)
                              center={true}
                            >
                              <ForwardRef(TouchRipple)
                                center={true}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </button>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(IconButton)>
                  </WithStyles(ForwardRef(IconButton))>
                  <WithStyles(ForwardRef(IconButton))
                    aria-label="share"
                  >
                    <ForwardRef(IconButton)
                      aria-label="share"
                      classes={
                        Object {
                          "colorInherit": "MuiIconButton-colorInherit",
                          "colorPrimary": "MuiIconButton-colorPrimary",
                          "colorSecondary": "MuiIconButton-colorSecondary",
                          "disabled": "Mui-disabled",
                          "edgeEnd": "MuiIconButton-edgeEnd",
                          "edgeStart": "MuiIconButton-edgeStart",
                          "label": "MuiIconButton-label",
                          "root": "MuiIconButton-root",
                          "sizeSmall": "MuiIconButton-sizeSmall",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        aria-label="share"
                        centerRipple={true}
                        className="MuiIconButton-root"
                        disabled={false}
                        focusRipple={true}
                      >
                        <ForwardRef(ButtonBase)
                          aria-label="share"
                          centerRipple={true}
                          className="MuiIconButton-root"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          disabled={false}
                          focusRipple={true}
                        >
                          <button
                            aria-label="share"
                            className="MuiButtonBase-root MuiIconButton-root"
                            disabled={false}
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            <span
                              className="MuiIconButton-label"
                            >
                              <ForwardRef>
                                <WithStyles(ForwardRef(SvgIcon))>
                                  <ForwardRef(SvgIcon)
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef>
                            </span>
                            <WithStyles(memo)
                              center={true}
                            >
                              <ForwardRef(TouchRipple)
                                center={true}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </button>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(IconButton)>
                  </WithStyles(ForwardRef(IconButton))>
                  <WithStyles(ForwardRef(IconButton))
                    aria-expanded={false}
                    aria-label="show more"
                    className="makeStyles-expand-3"
                    onClick={[Function]}
                  >
                    <ForwardRef(IconButton)
                      aria-expanded={false}
                      aria-label="show more"
                      className="makeStyles-expand-3"
                      classes={
                        Object {
                          "colorInherit": "MuiIconButton-colorInherit",
                          "colorPrimary": "MuiIconButton-colorPrimary",
                          "colorSecondary": "MuiIconButton-colorSecondary",
                          "disabled": "Mui-disabled",
                          "edgeEnd": "MuiIconButton-edgeEnd",
                          "edgeStart": "MuiIconButton-edgeStart",
                          "label": "MuiIconButton-label",
                          "root": "MuiIconButton-root",
                          "sizeSmall": "MuiIconButton-sizeSmall",
                        }
                      }
                      onClick={[Function]}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        aria-expanded={false}
                        aria-label="show more"
                        centerRipple={true}
                        className="MuiIconButton-root makeStyles-expand-3"
                        disabled={false}
                        focusRipple={true}
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          aria-expanded={false}
                          aria-label="show more"
                          centerRipple={true}
                          className="MuiIconButton-root makeStyles-expand-3"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          disabled={false}
                          focusRipple={true}
                          onClick={[Function]}
                        >
                          <button
                            aria-expanded={false}
                            aria-label="show more"
                            className="MuiButtonBase-root MuiIconButton-root makeStyles-expand-3"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            <span
                              className="MuiIconButton-label"
                            >
                              <ForwardRef>
                                <WithStyles(ForwardRef(SvgIcon))>
                                  <ForwardRef(SvgIcon)
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef>
                            </span>
                            <WithStyles(memo)
                              center={true}
                            >
                              <ForwardRef(TouchRipple)
                                center={true}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </button>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(IconButton)>
                  </WithStyles(ForwardRef(IconButton))>
                </div>
              </ForwardRef(CardActions)>
            </WithStyles(ForwardRef(CardActions))>
            <WithStyles(ForwardRef(Collapse))
              in={false}
              timeout="auto"
              unmountOnExit={true}
            >
              <ForwardRef(Collapse)
                classes={
                  Object {
                    "container": "MuiCollapse-container",
                    "entered": "MuiCollapse-entered",
                    "hidden": "MuiCollapse-hidden",
                    "wrapper": "MuiCollapse-wrapper",
                    "wrapperInner": "MuiCollapse-wrapperInner",
                  }
                }
                in={false}
                timeout="auto"
                unmountOnExit={true}
              >
                <Transition
                  addEndListener={[Function]}
                  appear={false}
                  enter={true}
                  exit={true}
                  in={false}
                  mountOnEnter={false}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={null}
                  unmountOnExit={true}
                />
              </ForwardRef(Collapse)>
            </WithStyles(ForwardRef(Collapse))>
          </div>
        </ForwardRef(Paper)>
      </WithStyles(ForwardRef(Paper))>
    </ForwardRef(Card)>
  </WithStyles(ForwardRef(Card))>
</NewsCard>
`;
